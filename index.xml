<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>riverleo</title>
    <link>https://rkdehddnr.com/</link>
    <description>Recent content on riverleo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 11 Jan 2019 18:47:11 +0900</lastBuildDate>
    
	<atom:link href="https://rkdehddnr.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>함수형 프로그래밍과 테스트</title>
      <link>https://rkdehddnr.com/posts/%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%ED%85%8C%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Fri, 11 Jan 2019 18:47:11 +0900</pubDate>
      
      <guid>https://rkdehddnr.com/posts/%ED%95%A8%EC%88%98%ED%98%95-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D%EA%B3%BC-%ED%85%8C%EC%8A%A4%ED%8A%B8/</guid>
      <description>이전에 어느 개발자 분에게 OOP 대신 함수형 프로그래밍을 사용하는 이유가 뭐냐는 질문을 받은 적 있는데 당시에 짧게 이야기하다보니 명확하게 그 이유를 설명하기가 어렵더군요. 이야기를 끝내고 돌아오는 길에 개념을 정리할 필요가 있겠다는 생각이 들어 글로 작성해 보았습니다.
객체지향 함수형 프로그래밍은 객체지향 개념에 익숙한 개발자가 보기에 조금 난해할 수 있는 구조를 가지고 있습니다.
기본적으로 객체지향은 클래스와 인스턴스 그리고 인터페이스를 기반으로 데이터를 캡슐링하고 절차지향적인 코드가 갖고 있는 이슈를 근본적으로 뜯어 고치는 방향으로 발전했다면 함수형 프로그래밍은 기본적으로 불변하는 데이터와 멱등성을 바탕으로 절차지향 프로그래밍을 부분 보완하는 방향을 갖고 있습니다.</description>
    </item>
    
    <item>
      <title>FSTS (From SPA to SSR)</title>
      <link>https://rkdehddnr.com/posts/fsts-from-spa-to-ssr/</link>
      <pubDate>Thu, 25 Oct 2018 10:09:39 +0900</pubDate>
      
      <guid>https://rkdehddnr.com/posts/fsts-from-spa-to-ssr/</guid>
      <description>FJTR 작업이 마무리된 뒤 한동안 해외진출과 신기능 개발 그리고 업데이트 등으로 바쁜 일정에 쫓기고 있었습니다. 그러던 사이 기술 부채는 눈덩이처럼 불어나 있었고 내부적으로 조직 개편도 여러차례 이어지면서 잦은 개발자 이동으로 히스토리도 상당히 엉켜 있는 상태였습니다.
그러다보니 당시 여러 제품에서 기술 부채를 해결하기 위한 움직임들이 일어났고 그에 대한 일환으로 리팩토링 작업이 내부적으로 많이 진행되고 있었죠. 하지만 그런 분위기 속에서도 유저웹은 상대적으로 사용자가 많고 장애에 민감한 영역이다보니 리팩토링을 진행할 때 생각을 맞추는 과정이 생각보다 쉽지 않았습니다.</description>
    </item>
    
    <item>
      <title>FJTR (From jQuery To React)</title>
      <link>https://rkdehddnr.com/posts/fjtr-from-jquery-to-react/</link>
      <pubDate>Fri, 05 Oct 2018 11:03:35 +0900</pubDate>
      
      <guid>https://rkdehddnr.com/posts/fjtr-from-jquery-to-react/</guid>
      <description>원티드 입사한지 3년이 넘어 처음 써보는 회고입니다. 한동안 안 쓰던 글을 갑자기 몰아 쓰려니 쉽지가 않네요. 내용도 너무 방대하구요. 앞으로는 기회가 있을 때 틈틈히 써나가야 겠습니다. (동욱)
 제가 이 회사에 처음 왔을 때 원티드는 jQuery와 Jinja(Flask 템플릿 엔진) 기반으로 만들어진 웹서비스였습니다. Webpack같은 번들링 도구도 없었고 CSS 전처리도 없어 SASS나 LESS 같은 문법을 사용할 수도 없었습니다. 당시 환경을 좀 더 이해하기 쉽게 설명해 보자면 프론트엔드 황무지라고 표현하는게 좋겠네요. 물론 그도 그럴 것이 저는 원티드랩의 첫 프론트엔드 개발자였고 당시 원티드는 만들어진지 반 년도 안된 서비스였습니다.</description>
    </item>
    
  </channel>
</rss>